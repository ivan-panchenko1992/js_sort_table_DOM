{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","sortedTable","index","table","eventClick","sortedList","sort","previous","current","previousCell","cells","textContent","currentCell","Number","replace","localeCompare","row","appendChild","addEventListener","clickEvent","headClick","target","closest","cellIndex","rows","children","eventA","contains"],"mappings":";AAAA,aAuCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArCD,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SAezC,SAASE,EAAYC,EAAOC,EAAOC,GAC3BC,IAAAA,EAAaF,EAEnBE,EAAWC,KAAK,SAACC,EAAUC,GACnBC,IAAAA,EAAeF,EAASG,MAAMR,GAAOS,YACrCC,EAAcJ,EAAQE,MAAMR,GAAOS,YAErCP,MAAe,WAAfA,EACKS,OAAOJ,EAAaK,QAAQ,QAAS,KACzCD,OAAOD,EAAYE,QAAQ,QAAS,KACf,QAAfV,EACFS,OAAOJ,GACZI,OAAOD,GAEFH,EAAaM,cAAcH,KAIpBP,IAlB2B,EAkB3BA,EAAAA,EAAAA,GAlB2B,IAkBf,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBW,IAAAA,EAAmB,EAAA,MAC5BhB,EAAUiB,YAAYD,IAnBqB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAb/CnB,EAAUqB,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAAYD,EAAWE,OAAOC,QAAQ,MACtCC,EAAYH,EAAUG,UACtBC,EAAWxB,EAAAA,EAAUyB,UACrBC,EAASP,EAAWE,OAAOV,YAE5BS,GAAcvB,EAAU8B,SAASP,IAItCnB,EAAYsB,EAAWC,EAAME","file":"main.b034ae5a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\n\ntableHead.addEventListener('click', (clickEvent) => {\n  const headClick = clickEvent.target.closest('th');\n  const cellIndex = headClick.cellIndex;\n  const rows = [...tableBody.children];\n  const eventA = clickEvent.target.textContent;\n\n  if (!headClick || !tableHead.contains(headClick)) {\n    return;\n  }\n\n  sortedTable(cellIndex, rows, eventA);\n});\n\nfunction sortedTable(index, table, eventClick) {\n  const sortedList = table;\n\n  sortedList.sort((previous, current) => {\n    const previousCell = previous.cells[index].textContent;\n    const currentCell = current.cells[index].textContent;\n\n    if (eventClick === 'Salary') {\n      return Number(previousCell.replace(/[$,]/g, ''))\n       - Number(currentCell.replace(/[$,]/g, ''));\n    } else if (eventClick === 'Age') {\n      return Number(previousCell)\n      - Number(currentCell);\n    } else {\n      return previousCell.localeCompare(currentCell);\n    }\n  });\n\n  for (const row of sortedList) {\n    tableBody.appendChild(row);\n  }\n}\n"]}